<?xml version="1.0" encoding="UTF-8"?>

<article xmlns="http://docbook.org/ns/docbook" version="5.0">
    
    <title>Final Report - Dušan Hetlerović</title>
    <section>
        <title>What I did</title>
        <simplelist>
            <member>Functions for traversing and analyzing the generated document</member>
            <member>Validation .xsd file for output</member>
        </simplelist>
    </section>
    <section>
        <title>Problems</title>
        <para>
            First of all, we needed to figure out what information do we even want to get from the generated .xml files. As Bruno suggested, counting code debt was a good start. After that, the most general things came to mind, such as row count and function counts. The idea of counting types of imports and parameter types came only after a quick brainstorming.
        </para>
        <para>
            After I knew what to do, but yet before I could start working on it, I needed to study the template provided by Peter in order to know how the program works and where exactly I am supposed to be working. Worst part was getting it to run, as each of us was developing on a different OS. Luckily, all went just fine in the end.
        </para>
        <para>
            Main part of the implementation of the counting functions was traversing the tree. For simple tasks, like counting TODOs or functions, the implementation could have been done simply by using DOM and the getElementsByTagName() function, while other functions needed a more complex approach, e.g. the CountRows function was required to recursively traverse the tree via XPathNavigator.  
        </para>
        <para>
            When all the analysis functions had been implemented, I needed to create a validation file for the output after it has been formatted. The output looks fairly simple, but as its contents depended on the analysis function preformed, it proved to not be as easy as it may seem at first glance. Different functions had different requirements for output, but thanks to xs:choice, the final schema looked pretty neat in the end.
        </para>
        <para>
            My final nemesis turned out to be GitHub. I have worked with git before, but only on the faculty's GitLab. I have to say that GitLab is fairly simple in comparison to GitHub, with GitHub having additional features and, most of all, a different interface. Luckily, we had a GitHub wizard in our team, so he was very helpful when it came to putting the project pieces together.
        </para>
    </section>
    <section>
        <title>Summary</title>
        <para>
            The project proved to be a challenge at times, but for all the wrong reasons, mainly getting the code running on my machine as Visual Studio was not doing me any favors. On the other hand, seeing the program finally running was a huge relief and got me excited to finally work on it.
        </para>
        <para>
            Srcml is a very useful tool and I am glad I got to work with it, as I was always interested in statistics. The generated srcml document had a great structure to work with. Also, this was my first real experience with C#, so that is a plus as well.
        </para>
        <para>
            Apart from the project itself, the experience of working in a team was a very interesting one, as we faced the challenges one would expect from a team project: synchronization, waiting for someone else to finish up so that we can work on our part, analyzing other people's code to get it to work, etc. On the other hand, it was great to have people help you if you need it and having someone to discuss the project with.
        </para>
        <para>
            To sum up, the project was not only a great learning experience, but it was also one with interesting results and mechanics, making it fun to be involved with.
        </para>
    </section>

</article>
